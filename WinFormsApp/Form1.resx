<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>