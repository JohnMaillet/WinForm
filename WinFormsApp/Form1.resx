<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>